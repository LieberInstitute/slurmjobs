% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/array_submit.R
\name{array_submit}
\alias{array_submit}
\title{Submit an array job with a specified set of task IDs}
\usage{
array_submit(
  job_bash,
  task_ids = NULL,
  submit = FALSE,
  restore = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{job_bash}{A \code{character(1)} vector with the name of a bash script
in the current working directory.}

\item{task_ids}{An optional numeric vector specifying which (relative) task
IDs to resubmit (e.g. c(1, 4, 6)). If NULL, the task IDs will be inferred
by scraping the log file for the job ID for the array job as originally
submitted, and using \code{job_report()} to pull failed task IDs}

\item{submit}{A \code{logical(1)} vector determining whether to actually submit
the tasks or not using \code{qsub}.}

\item{restore}{A \code{logical(1)} vector determining whether to restore the
script to the original state.}

\item{verbose}{A \code{logical(1)} vector specifying whether to print details
about how failed tasks were determined (applicable when \code{task_ids} is NULL).}
}
\value{
The path to \code{job_bash}.
}
\description{
Given a bash script that specifies the --array \code{sbatch} option (that is, an
array job), this function overwrites (temporarily if \code{restore} = TRUE) the
script in place and resubmits (when \code{submit} = TRUE) the array with the
specified \code{task_ids}. If this array was created with \code{job_single}, \code{task_ids}
may be ommitted and failed tasks are automatically inferred. This function is
intended to help re-run failed tasks of a large array job that was previously
submitted.
}
\examples{

## Choose a script name
job_name <- paste0("array_submit_example_", Sys.Date())

## Create an array job on the temporary directory
with_wd(tempdir(), {
    ## Create an array job script to use for this example
    job_single(
        name = job_name,
        create_shell = TRUE,
        task_num = 100
    )

    ## Now we can submit the job for a set of task IDs (or omit 'task_ids'
    ## to automatically grab those same failed task IDs)
    array_submit(
        job_bash = paste0(job_name, ".sh"),
        task_ids = c(1, 6, 8:20, 67),
        submit = FALSE
    )
})

}
\author{
Leonardo Collado-Torres

Nicholas J. Eagles
}
